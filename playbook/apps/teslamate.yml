---

- hosts: 

  vars:
    application: teslamate
    docker_network: 

    ENCRYPTION_KEY: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      31376630373965656163376462646531616666666364353465646164646230303932363939623862
      3262336365393265383332353136653139386233653262370a623539313433386234636136373365
      32663638306630653336613630623534616162376632353465343238313835353461353161353664
      6431383234303461640a326464343031666438656466383331646161353564623331623561333735
      34633937336334656139366466393438383865653732353039373463323532363139353937616263
      3433643435633930646164616132653863316463353834646134

    postgres_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      65646235353939363332383733376234666438366136646362313665653235396465353363633361
      3363616434626563636639333739666131393933306262380a643338303739356162613966653633
      38353263316465393761316664316265636664616563653935656130373435633932313635343038
      6638356130313339350a353966393936356534333938656634633233316535396265306632303463
      61303861613662363330383139333866323333656463356537353161633065653362643331356665
      33613136653462643538646563313161623930663037623036363763623337366335376232346434
      353961323038613338656137643833306166

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0775"

    - name: Create directories
      ansible.builtin.file:
        path: "{{ config_directory }}/{{ item }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0777"
      loop:
        - "import"
        - "grafana-data"

    - name: Create {{ application }} container
      community.docker.docker_container:
        name: "{{ application }}"
        image: teslamate/teslamate:latest
        pull: true
        state: started
        restart_policy: unless-stopped
        ports:
          - "4000:4000"
        env:
          ENCRYPTION_KEY: "{{ ENCRYPTION_KEY }}"
          DATABASE_USER: teslamate
          DATABASE_PASS: "{{ postgres_password }}"
          DATABASE_NAME: teslamate
          DATABASE_HOST: "postgres"
          MQTT_HOST: "mosquitto"

        volumes:
          - "{{ config_directory }}/import:/opt/app/import"
        networks:
          - name: "{{ docker_network }}"

    - name: Create {{ application }}-grafana container
      community.docker.docker_container:
        name: "{{ application }}-grafana"
        image: teslamate/grafana:latest
        pull: true
        state: started
        restart_policy: unless-stopped
        ports:
          - "3000:3000"
        env:
          DATABASE_USER: teslamate
          DATABASE_PASS: "{{ postgres_password }}"
          DATABASE_NAME: teslamate
          DATABASE_HOST: "postgres"
        volumes:
          - "{{ config_directory }}/grafana-data:/var/lib/grafana"
        networks:
          - name: "{{ docker_network }}"

