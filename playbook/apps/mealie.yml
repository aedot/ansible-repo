---

- hosts: 

  vars:
    application: mealie

    admin_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      30623839376634333837303965326364333035656137356637626631623237626530376266303432
      6236326630323034646161393530323136636161396461650a613966313137663233656536376338
      37663666336637386438306639323664353034376334633261376431663064393363343234636132
      3138623062396161330a396634363436346139356139663836343536346336626436303834356566
      35323232316265303566326566303235386233383132326230656330333933376133393038616264
      6161316665653136626630386132646338623139313037643839

    postgres_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      62633137396164626236313733393163646465356231353865383866303837333231313931346366
      3161356263653335363535623963376661333435346133300a313030363364326539333033346631
      30386665663437326634313531396137616538393336366134366362343266376161346164353932
      6666363865303530360a613532623931353736373730376133393631343633353836343233643638
      63626137346136653262336262376138343034336436353763353263313865643061663335303566
      6639393835373836643538396561396438633863613230663366

    docker_network: 

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0771"

    - name: Create container
      community.docker.docker_container:
        name: "{{ application }}"
        image: hkotel/mealie:omni-nightly
        state: started
        restart_policy: unless-stopped
        published_ports:
          - "3010:3000"
          - "9010:9000"
        env:
          PUID: "{{ common_user_id | string }}"
          PGID: "{{ common_group_id | string }}"
          TZ: "{{ common_timezone }}"
          BASE_URL: "https://{{ application }}.{{ common_tld }}"

          ALLOW_SIGNUP: "false"
          RECIPE_PUBLIC: "false"
          RECIPE_DISABLE_COMMENTS: "true"

          SMTP_HOST: "{{ common_email_host }}"
          SMTP_PORT: "{{ common_email_port | string }}"
          SMTP_FROM_NAME: "Mealie"
          SMTP_AUTH_STRATEGY: "{{ common_email_protocol }}" # Options: 'TLS', 'SSL', 'NONE'
          SMTP_FROM_EMAIL: "notification{{ common_email_to }}"
          SMTP_USER: "{{ common_smtp_username }}"
          SMTP_PASSWORD: "{{ common_smtp_password }}"

          DEFAULT_GROUP: "Home"
          # The Default Credentials for the Super User
          DEFAULT_EMAIL: "aedot{{ common_email_to }}"
          DEFAULT_PASSWORD: "{{ admin_password }}"

#           # Configuration for authentication via an external LDAP server
          LDAP_AUTH_ENABLED: "true"
          LDAP_SERVER_URL: "ldap://{{ ldap_host }}:389"
          # LDAP_TLS_INSECURE: False
          # LDAP_TLS_CACERTFILE: 
          LDAP_ENABLE_STARTTLS: "False"
          LDAP_BASE_DN: "{{ ldap_base_dn }}"
          # LDAP_QUERY_BIND=""
          # LDAP_QUERY_PASSWORD=""

          # Optionally, filter by a particular user group
          # (&(|({id_attribute}={input})({mail_attribute}={input}))(objectClass=person)(memberOf=cn=mealie_user,ou=groups,dc=example,dc=com))
          LDAP_USER_FILTER: "(&({username_attribute}={input})(objectClass=person))"

          # LDAP_ADMIN_FILTER=""
          LDAP_ID_ATTRIBUTE: "uid"
          LDAP_NAME_ATTRIBUTE: "givenName"
          LDAP_MAIL_ATTRIBUTE: "mail"

        volumes:
          - "{{ config_directory }}/data:/app/data"
        networks:
          - name: "{{ docker_network }}"
        labels:
          '{
            "traefik.enable": "true",
            "traefik.http.routers.{{ application }}.entryPoints": "https",
            "traefik.http.services.{{ application }}.loadbalancer.server.scheme": "http",
            "traefik.http.routers.{{ application }}.middlewares": "auth@file",
          }'