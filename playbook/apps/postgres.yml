---

- hosts: 

  vars:
    application: postgres
    docker_network: 

    postgres_password: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      62353464616436633333666332373461623937383232633439626632393866333564356664616166
      3434353133306232613262633663663137613530346162320a376361323037366332613232393764
      39346132363530636639366364613134373736633265646130373138333134643833323235393264
      3630376430613232620a346133343630393135326232616262353461303833646164663830636361
      33636436303266666364336262666135653361326334343135323765396333343564643531643830
      3832653139636463646266313336363532633833366462343035

  handlers:
    - name: Restart
      community.docker.docker_container:
        name: "{{ application }}"
        restart: true
        comparisons:
          '*': ignore

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "{{ common_user }}"
        group: "{{ common_group }}"
        mode: "0775"

    - name: Template config
      ansible.builtin.template:
        src: "{{ files_directory }}/{{ item }}.j2"
        dest: "{{ config_directory }}/{{ item }}"
        owner: "{{ common_root_id }}"
        group: "{{ common_root_group }}"
        mode: "0444"
      loop:
        - init.sql
      notify: Restart

    - name: Create container
      community.docker.docker_container:
        name: "{{ application }}"
        image: postgres:latest
        state: started
        restart_policy: unless-stopped
        published_ports:
          - 5432:5432
        volumes: 
          - "{{ config_directory }}/data/:/var/lib/postgresql/data"
          - "{{ config_directory }}/init.sql:/docker-entrypoint-initdb.d/init.sql"
        env:
          TZ: "{{ common_timezone }}"
          POSTGRES_USER: "postgres"
          POSTGRES_PASSWORD: "{{ postgres_password }}"
          # POSTGRES_DB: "{{ application }}_db"
        networks:
          - name: "{{ docker_network }}"