---

- hosts: 

  vars:
    application: alertmanager

    docker_network: 

    alertmanager_slack_url: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      66366165373733626131396462393231653766333961636562643466316336316462653139326635
      6238653364656461623632643936626233393963363438370a376366623461343464356538646238
      38383530333539643130663761626338323936313132656533373366356439663937336162643037
      3533336334643761370a323765386266326132333935663936623562616263633665616534626236
      38373033346635356135366336386637373730363639323461326231666632306363343561643961
      61333537346263323934643063343430656538373336306433633864633534336166366638353939
      33636261633837396166636436373733643962303861613430356230303365663864633636336466
      35663338616461626332663363613637613662356465663464356634373665316437633065323761
      3739


  handlers:
    - name: Restart
      community.docker.docker_container:
        name: "{{ application }}"
        restart: true
        comparisons:
          '*': ignore

  tasks:
    - name: Create config folder
      ansible.builtin.file:
        path: "{{ config_directory }}"
        state: directory
        owner: "65534"  # nobody user
        group: "{{ common_group }}"
        mode: "0771"

    - name: Create directories
      ansible.builtin.file:
        path: "{{ config_directory }}/{{ item }}"
        state: directory
        owner: "65534"  # nobody user
        group: "{{ common_group }}"
        mode: "0771"
      loop:
        - config
        - data

    - name: Template config
      ansible.builtin.template:
        src: "{{ files_directory }}/alertmanager.yml.j2"
        dest: "{{ config_directory }}/config/alertmanager.yml"
        owner: "65534"  # nobody user
        group: "{{ common_group }}"
        mode: "0444"
        validate: "docker run --rm --name {{ application }}_config_check -v %s:/tmp/config.yml --entrypoint /bin/amtool prom/alertmanager:latest check-config /tmp/config.yml"
      notify: Restart

    - name: Create container
      community.docker.docker_container:
        name: "{{ application }}"
        image: prom/alertmanager:v0.26.0
        state: started
        restart_policy: always
        command:
          - "--config.file=/etc/alertmanager/alertmanager.yml"
          - "--storage.path=/alertmanager"
          - "--web.external-url=https://{{ application }}.{{ common_tld }}"
          - "--data.retention=72h"
        volumes:
          - "{{ config_directory }}/config:/etc/alertmanager"
          - "{{ config_directory }}/data:/alertmanager"
        published_ports:
          - 9093:9093
        networks:
          - name: "{{ docker_network }}"